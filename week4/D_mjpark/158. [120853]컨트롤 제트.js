/**
 * 문제 설명
 * 숫자와 "Z"가 공백으로 구분되어 담긴 문자열이 주어집니다. 문자열에 있는 숫자를 차례대로 더하려고 합니다. 이 때 "Z"가 나오면 바로 전에 더했던 숫자를 뺀다는 뜻입니다. 숫자와 "Z"로 이루어진 문자열 s가 주어질 때, 머쓱이가 구한 값을 return 하도록 solution 함수를 완성해보세요.
 *
 * 제한사항
 * 1 ≤ s의 길이 ≤ 200
 * -1,000 < s의 원소 중 숫자 < 1,000
 * s는 숫자, "Z", 공백으로 이루어져 있습니다.
 * s에 있는 숫자와 "Z"는 서로 공백으로 구분됩니다.
 * 연속된 공백은 주어지지 않습니다.
 * 0을 제외하고는 0으로 시작하는 숫자는 없습니다.
 * s는 "Z"로 시작하지 않습니다.
 * s의 시작과 끝에는 공백이 없습니다.
 * "Z"가 연속해서 나오는 경우는 없습니다.
 *
 * 입출력 예
 * s	result
 * "1 2 Z 3"	4
 * "10 20 30 40"	100
 * "10 Z 20 Z 1"	1
 * "10 Z 20 Z"	0
 * "-1 -2 -3 Z"	-3
 *
 * @param { String } s 숫자, (Z), 공백으로 이루어진 문자열
 * @returns "Z"가 나오면 바로 전에 더했던 뺀 값과 문자열에 있는 숫자를 차례대로 더한 값
 */

function solution(s) {
  // 1. 문자열을 공백으로 나누어
  // 2. 숫자가 아닐 때(Z일 때) 앞에 원소의 값을 빼고
  // 3. 그게아니라면 전부 더한다
  var sArr = s.split(" ");
  var answer = 0;

  for (let i = 0; i < sArr.length; i++) {
    if (isNaN(sArr[i])) {
      // 숫자가 아니라면?
      answer -= Number(sArr[i - 1]);
    } else {
      // 숫자라면?
      answer += Number(sArr[i]);
    }
  }

  return answer;
}
